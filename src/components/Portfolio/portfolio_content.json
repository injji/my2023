[
  {
    "id": 1,
    "project_name": "2023 포트폴리오",
    "project_video": [],
    "project_img": ["port1.webp", "port2023.webp"],
    "skill": [
      "React",
      "Typescript",
      "SCSS",
      "Jotai",
      "HTML",
      "CSS",
      "Javascript",
      "GitHub",
      "figma"
    ],
    "date": "23.03 ~ 23.04",
    "position": ["기획", "디자인", "퍼블리싱", "프론트엔드"],
    "giturl": "https://github.com/injji/my2023",
    "figmaurl": "https://www.figma.com/file/rZJIMsUqztYHT5Uu0L0362/2023-%ED%8F%AC%ED%8A%B8%ED%8F%B4%EB%A6%AC%EC%98%A4?node-id=0%3A1&t=s9AcOcSvjOWphk3L-1",
    "etc_imgs": ["port.webp"],
    "project_think": "이번 포트폴리오에서는 특히나 고려한 세가지의 사항이 있습니다. \n첫번째는 밝은 색채를 좋아하고 취향이 뚜렷한 '나'라는 사람이 잘 드러나야 할 것, \n두번째는 햄버거 메뉴처럼 사용자가 두뎁스로 웹을 구경하는 것을 피하고 컨텐츠들을 한눈에 보여주어야 할 것, \n마지막 세번째는 포트폴리오의 팝업창 디자인이 맥의 웹 컨셉이라도 모바일과 태블릿에서는 닫기가 오른쪽에 오는 것처럼 사용자의 편의를 최대한으로 맞출 것 입니다. \n그리고 당연하게 미디어쿼리를 이용한 반응형 웹으로 제작하기로 결정했습니다. \n\n",
    "project_result": "메인에 애니메이션이 많다보니 pc, 태블릿, 모바일의 3개의 크기 만으로는 각각의 맞는 디바이스별 적정크기를 정하기가 어려웠습니다. 그래서 get-vw를 도입했고 'width별 px을 vw로 변환'하여 좀 더 세밀하게 크기를 조절할 수 있었습니다. \n또한 컴포넌트별 요소들을 나누다보니 메인에서 일어나는 click 이벤트가 많아졌습니다. 그래서 상태관리로는 redux 보다 좀 더 간편한 jotai를 채택하였고 상태관리용 store.ts 파일을 만들어 메인, 서브로 각각 관리하기로 했습니다. \nDB가 필요했던 경력리스트, 포트폴리오 리스트, 모달 팝업의 내용들은 json파일로 모아두어 반복되는 소스코드들을 줄이고 각각 관리할 수 있게 했습니다. \n화면에 감지하는 요소들이 보일 때 fadeIn 효과를 주고싶어서 'IntersectionObserver'라는 API를 사용하여 Keyframe으로 효과를 주었습니다 \n모든 코드들을 넣고 성능을 확인했을 때 대부분 'png, jpg, gif' 같이 이미지 파일로 인한 성능저하가 이루어졌고 각각 'webm, webp'파일로 변환하여 아래와 같은 성능으로 포폴을 완료할 수 있었습니다.\n\n"
  },
  {
    "id": 2,
    "project_name": "Colorverse",
    "project_video": [],
    "project_img": ["port1.webp", "port2023.webp"],
    "skill": [
      "React",
      "Typescript",
      "SCSS",
      "AWS",
      "Jotai",
      "HTML",
      "CSS",
      "Javascript",
      "Unity",
      "GitLab",
      "figma"
    ],
    "date": "22.12 ~ 진행중",
    "position": ["퍼블리싱", "프론트엔드"],
    "giturl": "",
    "figmaurl": "",
    "etc_imgs": ["atomic.webp"],
    "project_think": "메타버스용 컬러버스 앱을 제가 맡기 시작했을 땐, React를 알지 못하는 외주 퍼블리셔에게 코드파일을 받고 나서의 일이었습니다. 어떠한 클릭 이벤트나 이동 없이 html,css의 한 화면으로만 이루어져 있었고 한 파일에 모든 css가 전부 들어있어 가독성 또한 좋지 않았습니다. \n코드를 보고 나서 일의 순서를 정했는데 제일 먼저는 컴포넌트를 분리하고 css를 컴포넌트 별로 분리, 그 다음에는 React의 Hook을 사용한 onclick 이벤트 및 상태변화 적용, 이후에는 map()을 사용한 반복작업 분리 등 큰 틀부터 작은 틀까지 잡아가며 정리를 하고 본격적인 프로젝트에 들어갔습니다.",
    "project_result": "각 페이지, 테마 별로 상태관리가 필요하여 jotai를 적용하고 이번 프로젝트에는 특별하게 atomic design 방식을 사용해보았습니다. 'core, module, organisms'의 세타입으로 압축정리 및 type을 정의하여 요소별로 재사용 컴포넌트들을 만들었습니다. typescript에서는 타입을 정해줘야하는데 atomic 방식을 적용하니, 실 코드에서 타입으로 인해 코드가 지저분해지지 않아서 만족스러웠습니다. \n\n특히나 프로젝트에서 큰 이슈가 있었던 것은 '앱을 사용하는 사용자가 버튼의 크기나, 색, 형태 등을 커스텀할 수 있다'는 것이었습니다. 관리자 페이지에서 크기, 색, 형태들을 서버로 받아와서 atomic 방식에 옵션들로 설정해놓는 것으로 방향을 정할 수 있었습니다. \n\n이 다음으로는 사용자의 제스쳐에 맞춰서 하단 아이템 부분의 높이가 변경되는데 'react-modal-sheet'을 사용한 라이브러리가 안의 요소의 scrollbar의 생성을 막는 이슈가 있었습니다. 처음에 scroll이 되더라도 제스쳐를 사용하여 높이를 조정하는 순간부터 scroll이 되지 않았는데 스크롤을 잡아줄 수 있는 'react-custom-scrollbars'를 활용하여 해당 이슈를 해결할 수 있었습니다. \n\n"
  },
  {
    "id": 3,
    "project_name": "하루 한푼",
    "project_video": [],
    "project_img": [
      "card1.webp",
      "card2.webp",
      "card3.webp",
      "card4.webp",
      "card5.webp"
    ],
    "skill": ["React", "HTML", "CSS", "Javascript", "GitHub", "figma"],
    "date": "22.09 ~ 22.09",
    "position": ["기획", "디자인", "퍼블리싱", "프론트엔드"],
    "giturl": "https://github.com/injji/Haru",
    "figmaurl": "https://www.figma.com/file/nHFx75yAfrTSufDk790PtZ/%ED%95%98%EB%A3%A8%ED%95%9C%ED%91%BC?node-id=104%3A697&t=cpl8uprqfiv3asj6-1",
    "etc_imgs": ["haru3.webp", "haru4.webp", "haru5.webp", "haru6.webp"],
    "project_think": "리액트를 배우고 나서 처음 시도해보는 개인프로젝트입니다. \n먼저 '하루 한푼'이라는 프로젝트의 주제는, 원하는 날짜까지 목표 금액을 쓰자! 라는 것이고 20일 동안 40만원의 목표액을 적용한다면 하루에 2만원씩 쓸 수 있는데 하루에 쓸 수 있는 금액보다 적게 또는 많게 사용했다면 남은 금액은 남은 일 수에 맞춰서 자동으로 하루에 쓸 수 있는 금액이 계산되는 절약 앱입니다. \n\n디자인 컨셉은 토스앱을 레퍼런스로 잡고 기능을 중점으로 둔 앱 느낌의 심플한 디자인입니다. \n이 프로젝트의 기술적인 목표는 React의 Hook을 최대한 사용해보는 것이었습니다.\n\n",
    "project_result": "앱의 DB는 localstorage로 페이지 간의 정보를 전달 & 저장하였습니다.\n\n이 프로젝트를 하면서 가장 신경을 쓴 것은 카드의 커스텀 기능과 하루에 쓸 금액을 계산해주는 기능이었습니다.\n\n당시 교과서나 수능문제집을 활용하여 연예인의 사진을 넣던가 좋아하는 그림들을 넣는 유행이 있었는데 이것에서 아이디어를 얻어, 카드의 색 뿐만 아니라 이미지 첨부파일을 활용하여 앱 내의 카드를 커스텀 할 수 있도록 기능을 넣어놓았습니다. \n\n계산 기능은 시작 날짜부터 끝나는 날짜까지의 일 수를 저장하고 목표금액에서 일 수를 나눠 하루에 쓸 수 있는 금액을 계산하도록 설정했습니다. \n가장 애먹었던 것은 하루에 쓸 수 있는 금액에서 사용한 금액만큼 하루 백분률로 나타내고 일 수가 변경 될 때마다 남은 금액에서 전체 백분률로 나타냈던 일이었습니다. useEffect hook을  사용하여 데이터가 변경될 때마다 로컬에 정보를 저장하여 계산하도록 설정했습니다. \n\n 당시에 상태관리에 대해 무지한 상태로 프로젝트를 제작했는데 상태관리 툴을 사용했다면 더 편하게 작업이 가능했을 것 같아 아쉬운 마음이 있습니다.\n\n "
  },
  {
    "id": 7,
    "project_name": "프렌즈 메타버스",
    "project_video": ["meta.webm"],
    "project_img": ["meta.webp"],
    "skill": ["Gnuboard", "HTML", "CSS", "Javascript", "GitHub", "figma"],
    "date": "21.08 ~ 21.10",
    "position": ["기획", "디자인", "퍼블리싱"],
    "giturl": "",
    "figmaurl": "",
    "etc_imgs": [],
    "project_think": "이 홈페이지를 처음 기획하게 되었을 땐 그저 사업 홍보용 홈페이지와 같은 정형화된 컨셉이 아닌 메타버스가 잘 들어나기를 바란다는 대표님의 요청이 있었습니다.\n메타버스가 무엇일까. 한참을 고민하다 메타버스의 세계로 들어가는 듯한 홍보영상을 보게 되었고 그 순간, '캐릭터가 프렌즈의 로고로 들어가면서 빠져 들게 되는 메타버스의 세계를 보여주면 되겠다.' 라는 생각이 떠올랐습니다.\n캐릭터가 스크롤을 따라 밑으로 내려가면서 잘 구현된 게임의 스크린 샷을 연속적으로 보여주는 것이 최종 결정 되었고 이 프로젝트는 제가 인터랙션 디자인에 대해 관심을 갖는 계기가 되었습니다. ",
    "project_result": "가장 위, 메인 첫화면에는 프렌즈 메타버스의 홍보영상이 등장합니다. 메타버스의 세계로 들어가는 장면과 이어지게끔 캐릭터를 등장시켜 position:fixed로 고정한 뒤 스크롤을 내릴 때마다 함께 아래로 떨어지는 듯한 모션을 넣어두었습니다.\n그것과 함께 게임화면의 스크린샷 장면들이 위로 올라오는데, 당시 많은 이미지들이 개별적으로 움직이게끔 했지만 생각보다 많은 양의 이미지들을 관리하기가 수월하지 않았습니다. 결국 캐릭터 뒤에 있는 이미지의 한 묶음, 캐릭터 앞에 있는 이미지의 한 묶음의 2그룹으로 나누어 관리했습니다. \n이 작업으로 인해 인터렉션을 찾아보게 되었는데 지금 생각하면 아쉬움이 큰 프로젝트라고 생각합니다. \n이미지들만 있는 파일들로 따로 관리해서 각각 속도들을 조절하고 기울기나 크기, 돌아가는 animation을 활용했다면 더 다양하고 풍부한 웹화면이 나올 수 있지 않았을까?라는 생각이 들었습니다."
  },
  {
    "id": 8,
    "project_name": "악기해바라상가",
    "project_video": ["ak.webm"],
    "project_img": [],
    "skill": ["HTML", "CSS", "Javascript", "Godomall", "GitHub", "figma"],
    "date": "21.01 ~ 21.06",
    "position": ["기획", "디자인", "퍼블리싱", "프론트엔드"],
    "giturl": "",
    "figmaurl": "",
    "etc_imgs": [],
    "project_think": "악기해바라상가는 제가 처음으로 프로젝트 팀장을 맡아 시작한 프로젝트입니다. \n총 4명의 팀원이 있었고 영상, 마케팅, 공연, 물류 쪽 사람들과 소통을 해야했습니다. 각자 포지션이 다르고 인력이 부족하다보니 각 팀원들의 스케쥴과 업무들을 파악하는데 힘썼던 것 같습니다. 같은 회사에 다니지만 다른 일을 하고 각자 다른 지식을 가지고 있었기 때문에 최대한 많이 설명하고 모두가 프로젝트에 참여할 수 있도록 프로젝트의 컨셉부터 방향성까지 함께 논의하고자 하였습니다.\n저의 포지션은 전체적의 프로젝트의 컨셉과 기획, 디자인과 개발을 담당하였고 이 프로젝트의 방향성은 '악기를 판매만 하는 것이 아니라 악기들을 알리고 소비자가 참여가능한 종합몰을 만들자'라는 것입니다.",
    "project_result": "프로젝트의 처음은 순로롭지 않았습니다. 각자의 업무와 사정에 바빠서 회의가 제대로 진행이 되지 않았고 소통에 오류에 서로가 기분이 상하는 일도 부지기수였습니다. 그래서 일에 대해 소통할 때는 메신저가 아니라 얼굴을 맞대어 소통하고 개인적인 고민으로 힘들어가는 팀원이 있다면 이야기를 들어주는 것을 시작으로 프로젝트가 진행이 되기 시작했습니다.\n\n이 프로젝트에는 3가지 포인트가 있었는데, \n하나. 악상버스킹을 만들어서 비대면 버스킹 대회를 열어 시상하는 것.\n둘. 어떤 악기를 사용할지 고민하는 사람들에게 리뷰쇼핑으로 자사의 악기들을 영상으로 소개할 것. \n셋. 악기를 처음 접한 소비자들에게 세트상품을 만들어 고민할 부담을 줄여주는 것. \n이렇게 3가지를 잡고 프로젝트를 진행하였습니다. \n\n악상버스킹은 생각보다 사람들의 호응이 좋았습니다. 유투브에 악상버스킹을 홍보하는 사람들이 생겨났고 유투버도 참여하면서 알음알음 알려지기 시작했습니다. 악상버스킹에서 수상을 하면 자사제품을 상품으로 주는데 자사제품으로 영상을 제작하면 본인에게 한번 더 연락하여 쇼핑몰 메인에 영상을 올려두었습니다. \n리뷰쇼핑 영상을 제작하면서 고객들이 유입되는 작은 효과도 있었고 고객들이 자주 구매하는 것을 모아 세트상품을 내세우면서 구매로 이어지는 경우도 생겼습니다. \n모두가 노력한 덕분에 5월 달에는 1월보다 매출도 700%나 오르는 좋은 성과도 얻을 수 있었습니다. \n\n제가 이번 프로젝트를 하면서 가장 많이 느꼈던 것은 뚜렷한 방향성과 컨셉을 잡고 그것에 몰입하다보면 소비자가 그것을 알아준다는 것이었고 프로젝트를 하면서 팀원들 모두가 같은 마음으로 나아가지는 않는다는 뼈아픈 경험이었습니다. 그저 일만 잘하면 되는 것이 아니라 그 마음의 격차를 줄이는 것이 팀장으로써 해야하는 일의 첫번째가 아닐까 라는 생각을 했습니다."
  },
  {
    "id": 9,
    "project_name": "동네몰",
    "project_video": ["dong.webm"],
    "project_img": [],
    "skill": ["Gnuboard", "HTML", "CSS", "Javascript", "AdobePhotoShop"],
    "date": "20.07 ~ 20.11",
    "position": ["디자인", "퍼블리싱"],
    "giturl": "",
    "figmaurl": "",
    "etc_imgs": [],
    "project_think": "동네몰이라는 프로젝트는 처음에 디자인만 맡기로 한 작은 프로젝트일 뿐이었습니다. 제가 하는 일은 반응형도 아닌, 어플의 몇 개 되지 않는 페이지의 디자인을 담당하는 것이었기 때문에 큰 고려와 생각없이 프로젝트를 시작하게 되었습니다. 그러나 이 프로젝트는 제가 프론트엔드에 관심을 갖는 큰 계기가 되었습니다.",
    "project_result": "디자인은 단순 명료하고 심플하게 제작하기 바라는 클라이언트의 의견으로 Blue 컬러를 중심으로 컨셉을 잡았습니다. \n이후에 외주 개발자에게 일을 넘기는 것으로 끝나는 프로젝트였으나, 일의 마감일을 한달 남기고 대표님과 외주 개발자와의 연락이 끊기면서 급작스럽게 제가 일을 맡게 되었습니다. \n개발 진행이 거의 되지 않은 상태에서 새 외주 개발자를 구하게 되었는데 현재 상황과 개발 업무에 대해 소통을 해야했고 한명의 개발자로써는 마감일을 절대 맞추지 못하는 업무였습니다. 그 이유로, 작은 개발업무들은 제가 맡게 되었습니다. 한달 내내 야근을 하면서 새벽 3~4시까지 개발자와 소통하고 개발을 했었는데 그 당시 제가 느꼈던 것은 '성취'의 감정이였습니다. 하나의 코드를 개발할 때마다 많은 검색과 시간이 들었지만 그것을 겪으면서도 재미있다는 생각이 들어 짧게만 느껴졌습니다. \n그러다 한 사건이 있었는데 외주 개발자가 애니메이션을 javascript로만 구현을 하려다 보니 코드가 지저분해지는 것을 보고,  css로 구현하면 훨씬 간단할 것 같다는 생각이 들었습니다. 이 부분에 대해 개발자분에게 말씀드리고 class 하나를 추가하는 이벤트로 대체하게 되었는데 깨끗해진 코드를 보면서 아는 만큼 보인다라는 말이 실로 와닿는 순간이었습니다. \n이것은 제가 프론트엔드에 대해 알아보고 공부를 하는 계기가 되었습니다."
  },
  {
    "id": 5,
    "project_name": "MAPS TREND",
    "project_video": [],
    "project_img": [
      "maps.webp",
      "byapp1.webp",
      "byapp2.webp",
      "manim1.webp",
      "manim1-1.webp",
      "manim2.webp",
      "manim3.webp"
    ],
    "skill": [
      "Laravel",
      "HTML",
      "CSS",
      "Javascript",
      "Jquery",
      "GitLab",
      "figma"
    ],
    "date": "21.11 ~ 22.02",
    "position": ["퍼블리싱", "프론트엔드"],
    "giturl": "",
    "figmaurl": "",
    "etc_imgs": [],
    "project_think": "회사에서 맵스트렌드라는 프로젝트를 시작하면서 laravel이라는 php기반 프레임워크가 도입되었습니다. \n처음 사용을 해보는 것이다보니 laravel 책이나 강의들을 보면서 프레임 워크에 적응하는 것에 가장 많은 힘을 썼지만 다른 프레임워크에 비해 사용자가 많지 않아 정보가 부족했습니다. 직접 코드들을 분석해가며 경험을 쌓아야 했습니다.",
    "project_result": "맵스 트렌드는 마케팅 기술들을 상품화하여 쇼핑몰의 홍보를 도와주는 목적으로 설계되었습니다. \n그러다보니 소비자가 보는 쇼핑몰의 형태 뿐만 아니라 운영자용 관리페이지도 제작이 필요하여 담당하게 되었는데 laravel에서는 Mysql안에 있는 데이터들을 마이그레이션 파일을 만들어 출력하는 형태로 DB를 가져오고 있었습니다. 방문자 수 데이터를 불러와 chat.js 안에 배열 형태로 만들어 그래프로 출력하는 일을 하였습니다. \n사업의 이해관계가 잘 맞지 않아서 잠정 중단된 프로젝트이지만 laravel를 조금이나마 파악할 수 있는 프로젝트였습니다."
  }
]
